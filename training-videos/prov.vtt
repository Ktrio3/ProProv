WEBVTT
Kind: captions
Language: en

00:00:01.200 --> 00:00:04.640
In this training session, we will&nbsp;
cover secure computation techniques,&nbsp;&nbsp;

00:00:05.600 --> 00:00:09.520
data provenance for secure&nbsp;
computation, and provenance policies.

00:00:12.400 --> 00:00:17.200
Secure computation techniques are methods that&nbsp;
use cryptography to securely compute functions&nbsp;&nbsp;

00:00:17.200 --> 00:00:21.040
when some or all of the inputs should&nbsp;
remain secret to unauthorized parties.&nbsp;&nbsp;

00:00:21.760 --> 00:00:25.920
Some examples of secure computation&nbsp;
techniques include multi-party computation,&nbsp;&nbsp;

00:00:25.920 --> 00:00:30.320
secure enclaves, and zero-knowledge proofs.

00:00:30.320 --> 00:00:35.680
As an example, consider a scenario in which Bob&nbsp;
would like to compute the average of his, Alice,&nbsp;&nbsp;

00:00:35.680 --> 00:00:41.680
and Mallory's salaries. Alice and Mallory agree to&nbsp;
participate only if they can keep their individual&nbsp;&nbsp;

00:00:41.680 --> 00:00:46.640
salaries secret. To do this, they can employ&nbsp;
a secure computation technique that will only&nbsp;&nbsp;

00:00:46.640 --> 00:00:51.760
reveal the output of the average function to Bob&nbsp;
while keeping each of their input salaries secret.&nbsp;&nbsp;

00:00:53.200 --> 00:00:59.120
They can each begin by encrypting their data&nbsp;
with a secret cryptographic key. Then, Bob,&nbsp;&nbsp;

00:00:59.120 --> 00:01:03.520
Alice, and Mallory can each provide their&nbsp;
secret inputs to the secure average function,&nbsp;&nbsp;

00:01:03.520 --> 00:01:07.920
which will cryptographically compute the average&nbsp;
of their salaries and reveal the result to Bob.

00:01:09.680 --> 00:01:12.960
Now let's introduce data provenance&nbsp;
for secure computation techniques.&nbsp;&nbsp;

00:01:14.240 --> 00:01:18.800
Data provenance is documentation describing&nbsp;
the history of data from its inception to a&nbsp;&nbsp;

00:01:18.800 --> 00:01:24.400
slated state and can be used to assess the&nbsp;
integrity of data. It is represented as a&nbsp;&nbsp;

00:01:24.400 --> 00:01:28.640
labeled directed acyclic graph and the&nbsp;
possible nodes for a provenance graph&nbsp;&nbsp;

00:01:28.640 --> 00:01:34.000
of a secure computation in this study consist&nbsp;
of entities which can be: a contract entity,&nbsp;&nbsp;

00:01:34.000 --> 00:01:40.320
a key entity, or a data entity; agents, can be&nbsp;
an account agent or node agent; and activities.&nbsp;&nbsp;

00:01:41.200 --> 00:01:46.880
The labeled edges can be one of seven relations&nbsp;
which includes was attributed to, was derived&nbsp;&nbsp;

00:01:46.880 --> 00:01:53.840
from, used, acted on behalf of, was associated&nbsp;
with, was informed by, and was generated by.

00:01:55.680 --> 00:01:58.720
Contract entities represent the&nbsp;
logic that defines functions.&nbsp;&nbsp;

00:01:59.360 --> 00:02:04.640
Key entities represent cryptographic keys and&nbsp;
all other data is represented by data entities.&nbsp;&nbsp;

00:02:05.600 --> 00:02:10.960
Account agents represent users or organizations&nbsp;
that own entities and share some responsibility&nbsp;&nbsp;

00:02:10.960 --> 00:02:16.880
for the execution of a secure computation, and&nbsp;
node agents represent secure computation engines.&nbsp;&nbsp;

00:02:17.760 --> 00:02:21.920
Lastly, activities represent functions.

00:02:21.920 --> 00:02:26.960
Now let's discuss each of the provenance edge&nbsp;
relations. The first relation is was attributed&nbsp;&nbsp;

00:02:26.960 --> 00:02:32.880
to. For this edge, the source node can be any&nbsp;
entity and the destination node can be any agent.&nbsp;&nbsp;

00:02:32.880 --> 00:02:38.400
This relation means that the agent was responsible&nbsp;
for the creation of the entity. In the following&nbsp;&nbsp;

00:02:38.400 --> 00:02:44.800
example, the data entity salary b is the source&nbsp;
node and account agent Bob is the destination&nbsp;&nbsp;

00:02:44.800 --> 00:02:50.080
node. The relation between these two nodes&nbsp;
indicate that salary b was attributed to Bob.

00:02:52.320 --> 00:02:55.680
The next relation is was&nbsp;
derived from. For this edge,&nbsp;&nbsp;

00:02:55.680 --> 00:02:59.840
both the source and destination nodes must&nbsp;
be entities. This relation means that the&nbsp;&nbsp;

00:02:59.840 --> 00:03:05.280
destination entity influenced the creation of&nbsp;
the source entity. In the following example,&nbsp;&nbsp;

00:03:05.280 --> 00:03:11.520
the data entity average salary is the source node&nbsp;
and data entity salary b is the destination node.&nbsp;&nbsp;

00:03:11.520 --> 00:03:17.840
The relation between these two nodes indicate&nbsp;
that the average salary was derived from salary b.

00:03:19.120 --> 00:03:24.400
The next relation is used. For this edge, the&nbsp;
source node is an activity and the destination&nbsp;&nbsp;

00:03:24.400 --> 00:03:29.840
node is an entity. This relation means that&nbsp;
the activity used the entity as input. In&nbsp;&nbsp;

00:03:29.840 --> 00:03:34.960
the following example, the activity average is&nbsp;
the source node and data entity salary b is the&nbsp;&nbsp;

00:03:34.960 --> 00:03:40.240
destination node. The relation between these&nbsp;
two nodes indicate that average used salary b.

00:03:42.560 --> 00:03:48.480
The next relation is acted on behalf of. For this&nbsp;
edge, the source node is a node agent, which is a&nbsp;&nbsp;

00:03:48.480 --> 00:03:53.280
secure computation engine, and the destination&nbsp;
node is an account agent, which is a user.&nbsp;&nbsp;

00:03:53.280 --> 00:03:58.560
This relation means that the node agent performed&nbsp;
a computation on behalf of the account agent. In&nbsp;&nbsp;

00:03:58.560 --> 00:04:03.840
the following example, the node agent SCE is&nbsp;
the source node, and account agent Bob is the&nbsp;&nbsp;

00:04:03.840 --> 00:04:09.680
destination node. The relation between these two&nbsp;
nodes indicate that SCE acted on behalf of Bob.

00:04:11.840 --> 00:04:16.720
The next relation is was associated with. For&nbsp;
this edge, the source node is an activity,&nbsp;&nbsp;

00:04:16.720 --> 00:04:21.040
which represents a function, and the destination&nbsp;
node is a node agent, which represents a secure&nbsp;&nbsp;

00:04:21.040 --> 00:04:26.560
computation engine. This relation means that&nbsp;
the activity was executed by the node agent.&nbsp;&nbsp;

00:04:26.560 --> 00:04:30.000
In the following example, the&nbsp;
activity average is the source node,&nbsp;&nbsp;

00:04:30.000 --> 00:04:33.120
and the node agent SCE is the destination node.&nbsp;&nbsp;

00:04:33.120 --> 00:04:37.760
The relation between these two nodes indicate&nbsp;
that average was associated with SCE.

00:04:39.600 --> 00:04:43.840
The next relation is was generated&nbsp;
by. For this edge, the source node&nbsp;&nbsp;

00:04:43.840 --> 00:04:48.400
is an entity and the destination node is&nbsp;
an activity. This relation means that the&nbsp;&nbsp;

00:04:48.400 --> 00:04:52.720
entity was produced as output by the&nbsp;
activity. In the following example,&nbsp;&nbsp;

00:04:52.720 --> 00:04:58.240
the data entity average salary is the source node&nbsp;
and the activity average is the destination node.&nbsp;&nbsp;

00:04:58.240 --> 00:05:03.040
The relation between these two nodes indicates&nbsp;
that average salary was generated by average.

00:05:05.360 --> 00:05:09.920
The provenance nodes and relations can be&nbsp;
combined to form provenance graphs. Let's&nbsp;&nbsp;

00:05:09.920 --> 00:05:15.120
walk through a partial provenance graph for the&nbsp;
generation of average salary. This graph consists&nbsp;&nbsp;

00:05:15.120 --> 00:05:21.760
of six entities. Salary m, salary a, and salary&nbsp;
b are all data entities. Average contract is a&nbsp;&nbsp;

00:05:21.760 --> 00:05:26.400
contract entity and represents a contract that&nbsp;
provides instructions for how the average is to&nbsp;&nbsp;

00:05:26.400 --> 00:05:32.720
be computed. KeySCE is a key entity and represents&nbsp;
a cryptographic key that secures the computation.&nbsp;&nbsp;

00:05:32.720 --> 00:05:39.760
And average salary is a data entity. This graph&nbsp;
contains four agents: Mallory, Alice, and Bob&nbsp;&nbsp;

00:05:39.760 --> 00:05:45.920
are all account agents, and SCE, which represents&nbsp;
a secure computation engine, is a node agent.&nbsp;&nbsp;

00:05:45.920 --> 00:05:51.840
And lastly, the graph contains one activity&nbsp;
which represents the average function

00:05:53.280 --> 00:05:59.440
In this graph, salary M was attributed to Mallory,&nbsp;
salary A was attributed to Alice, and salary B was&nbsp;&nbsp;

00:05:59.440 --> 00:06:07.360
attributed to Bob. Average contract and keySCE was&nbsp;
attributed to SCE and SCE acted on behalf of Bob.

00:06:09.520 --> 00:06:12.800
The average activity used salary M, salary A,&nbsp;&nbsp;

00:06:12.800 --> 00:06:20.160
salary B, average contract, keySCE as&nbsp;
input, and was associated with SCE.

00:06:20.160 --> 00:06:25.920
The average salary was generated by the&nbsp;
average activity and was derived from salary M,&nbsp;&nbsp;

00:06:25.920 --> 00:06:30.160
salary A salary B, average contract, and keySCE.

00:06:32.480 --> 00:06:36.480
And lastly, the average salary&nbsp;
was attributed to Bob and SCE,&nbsp;&nbsp;

00:06:38.960 --> 00:06:41.280
resulting in the final provenance graph.

00:06:43.600 --> 00:06:49.200
Now we will introduce provenance policies.&nbsp;
Provenance policies are constraints placed&nbsp;&nbsp;

00:06:49.200 --> 00:06:53.840
on provenance graphs to either verify&nbsp;
that data was generated as expected&nbsp;&nbsp;

00:06:53.840 --> 00:06:59.120
or to detect when data was manipulated in&nbsp;
an unexpected way. Provenance policies are&nbsp;&nbsp;

00:06:59.120 --> 00:07:06.000
designed to prevent the consumption of untrusted&nbsp;
data. Going back to our average salary example,&nbsp;&nbsp;

00:07:06.000 --> 00:07:11.360
Bob can verify that the average salary was&nbsp;
generated as expected by specifying provenance&nbsp;&nbsp;

00:07:11.360 --> 00:07:15.840
policies that can be automatically checked&nbsp;
when given the appropriate provenance graph.

00:07:17.120 --> 00:07:22.080
In this study, you will use two languages and&nbsp;
systems to specify provenance policies that&nbsp;&nbsp;

00:07:22.080 --> 00:07:29.600
will be evaluated on provenance graphs. These&nbsp;
languages and systems include ProProv and Rego.

